@import './variables';

// Apply content padding, based on device size
@mixin contentPadding($paddingTop:0px, $paddingBottom:$contentPaddingBottom) {
  padding: $paddingTop $contentPadding-sm $paddingBottom $contentPadding-sm;

  @media screen and (min-width: $uhf-screen-min-mobile) {
    padding: $paddingTop $contentPadding-lg $paddingBottom $contentPadding-lg;
  }

  @media screen and (min-width: $ms-screen-min-xl) {
    padding: $paddingTop $contentPadding-xl $paddingBottom $contentPadding-xl;
  }
}

// High contrast mode mixins
// @todo: Shouldn't these, and the color variables, be in Fabric Core?
@mixin high-contrast {
  @media screen and (-ms-high-contrast: active) {
    @content;
  }
}

@mixin high-contrast-black-on-white {
  @media screen and (-ms-high-contrast: black-on-white) {
    @content;
  }
}

@mixin high-contrast-white-on-black {
  @media screen and (-ms-high-contrast: white-on-black) {
    @content;
  }
}

// Simulates a focus outline using an absolutely-positioned pseudo-element.
@mixin focus-border($inset: 0, $width: $ms-focus-border-width, $border-color: $ms-color-white, $outline-color: $ms-focus-border-color) {
  // Clear browser-specific focus styles and use 'transparent' as placeholder for focus style.
  outline: transparent;

  // Requirement because pseudo-element is absolutely positioned.
  position: relative;

  // Clear the focus border in Firefox.
  // Reference: http://stackoverflow.com/a/199319/1436671
  &::-moz-focus-inner {
    border: 0;
  }

  // When the element that uses this mixin is in a :focus state, add a pseudo-element to
  // create a border. Only do this when it's a child of ms-Fabric in a focusVisible state.
  :global(.ms-Fabric.is-focusVisible) &:focus:after {
    content: '';
    position: absolute;
    top: $inset + 1px;
    right: $inset + 1px;
    bottom: $inset + 1px;
    left: $inset + 1px;

    // Add focus border of specified $border-color.
    border: $width $ms-focus-border-style $border-color;

    outline: $width $ms-focus-border-style $outline-color;

    // Make the content not respond to mouse/touch events.
    // Reference: https://css-tricks.com/almanac/properties/p/pointer-events/
    pointer-events: none;
  }
}

// Overrides the browser's default focus outline style.
@mixin focus-outline($inset: 0, $width: $ms-focus-border-width, $color: $ms-focus-border-color) {
  // Only do this when it's a child of ms-Fabric in a focusVisible state.
  :global(.ms-Fabric.is-focusVisible) &:focus {
    outline: $width $ms-focus-border-style $color;
    outline-offset: -$inset;
  }
}
