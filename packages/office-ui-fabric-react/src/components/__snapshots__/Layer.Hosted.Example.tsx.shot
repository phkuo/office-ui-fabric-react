// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component Examples renders Layer.Hosted.Example.tsx correctly 1`] = `
<div>
  <div
    className=
        ms-Toggle
        is-checked
        is-enabled
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          margin-bottom: 8px;
        }
  >
    <label
      className=
          ms-Label
          ms-Toggle-label
          {
            -moz-osx-font-smoothing: grayscale;
            -webkit-font-smoothing: antialiased;
            box-shadow: none;
            box-sizing: border-box;
            color: #333333;
            display: block;
            font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
            font-size: 14px;
            font-weight: 400;
            margin-bottom: 0px;
            margin-left: 0px;
            margin-right: 0px;
            margin-top: 0px;
            overflow-wrap: break-word;
            padding-bottom: 5px;
            padding-left: 0;
            padding-right: 0;
            padding-top: 5px;
            word-wrap: break-word;
          }
      htmlFor="Toggle0"
    >
      Show host
    </label>
    <div
      className=
          ms-Toggle-innerContainer
          {
            display: inline-flex;
            position: relative;
          }
    >
      <button
        aria-checked={true}
        checked={true}
        className=
            ms-Toggle-background
            {
              align-items: center;
              background: #0078d4;
              border-color: transparent;
              border-radius: 1em;
              border-style: solid;
              border-width: 1px;
              box-sizing: border-box;
              cursor: pointer;
              display: flex;
              font-size: 20px;
              height: 1em;
              justify-content: flex-end;
              outline: transparent;
              padding-bottom: 0;
              padding-left: .2em;
              padding-right: .2em;
              padding-top: 0;
              position: relative;
              transition: all 0.1s ease;
              width: 2.2em;
            }
            &::-moz-focus-inner {
              border: 0;
            }
            .ms-Fabric--isFocusVisible &:focus:after {
              border: 1px solid #ffffff;
              bottom: -2px;
              content: "";
              left: -2px;
              outline: 1px solid #666666;
              position: absolute;
              right: -2px;
              top: -2px;
              z-index: 1;
            }
            &:hover {
              background-color: #106ebe;
              border-color: transparent;
            }
            @media screen and (-ms-high-contrast: active){&:hover {
              background-color: Highlight;
              border-color: Highlight;
            }
            @media screen and (-ms-high-contrast: active){& {
              background-color: WindowText;
            }
        data-is-focusable={true}
        id="Toggle0"
        onChange={[Function]}
        onClick={[Function]}
        role="switch"
        type="button"
      >
        <div
          className=
              ms-Toggle-thumb
              {
                background-color: #ffffff;
                border-color: transparent;
                border-radius: .5em;
                border-style: solid;
                border-width: .28em;
                box-sizing: border-box;
                height: .5em;
                transition: all 0.1s ease;
                width: .5em;
              }
              @media screen and (-ms-high-contrast: active){& {
                background-color: Window;
                border-color: Window;
              }
        />
      </button>
    </div>
  </div>
  <div
    className="ms-LayerHost LayerExample-customHost"
    id="layerhost1"
  />
  <p
    id="foo"
  >
    In some cases, you may need to contain layered content within an area. Create an instance of a LayerHost along with an id, and provide a hostId on the layer to render it within the specific host. (Note that it's important that you don't include children within the LayerHost. It's meant to contain Layered content only.)
  </p>
  <button
    aria-checked={false}
    checked={false}
    className=
        ms-Checkbox
        is-enabled
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          background: none;
          border: none;
          cursor: pointer;
          display: block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          margin-bottom: 0;
          margin-left: 0;
          margin-right: 0;
          margin-top: 0;
          outline: none;
          padding-bottom: 0;
          padding-left: 0;
          padding-right: 0;
          padding-top: 0;
          position: relative;
        }
        &::-moz-focus-inner {
          border: 0;
        }
        .ms-Fabric--isFocusVisible &:focus:after {
          border: 1px solid #ffffff;
          bottom: -2px;
          content: "";
          left: -2px;
          outline: 1px solid #666666;
          position: absolute;
          right: -2px;
          top: -2px;
          z-index: 1;
        }
        &:hover .ms-Checkbox-checkbox {
          border-color: #212121;
        }
        @media screen and (-ms-high-contrast: active){&:hover .ms-Checkbox-checkbox {
          border-color: Highlight;
        }
        &:focus .ms-Checkbox-checkbox {
          border-color: #212121;
        }
        &:hover .ms-Checkbox-checkmark {
          color: #a6a6a6;
          opacity: 1;
        }
        @media screen and (-ms-high-contrast: active){&:hover .ms-Checkbox-checkmark {
          color: Highlight;
        }
        &:hover .ms-Checkbox-text {
          color: #333333;
        }
        &:focus .ms-Checkbox-text {
          color: #333333;
        }
    id="checkbox-1"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    role="checkbox"
    type="button"
  >
    <label
      className=
          ms-Checkbox-label
          {
            align-items: flex-start;
            cursor: pointer;
            display: flex;
            margin-bottom: 0;
            margin-left: -4px;
            margin-right: -4px;
            margin-top: 0;
            position: relative;
            text-align: left;
            user-select: none;
          }
      htmlFor="checkbox-1"
    >
      <div
        className=
            ms-Checkbox-checkbox
            {
              align-items: center;
              border-color: #666666;
              border-style: solid;
              border-width: 1px;
              box-sizing: border-box;
              display: flex;
              flex-shrink: 0;
              height: 20px;
              justify-content: center;
              margin-bottom: 0;
              margin-left: 4px;
              margin-right: 4px;
              margin-top: 0;
              overflow: hidden;
              transition-duration: 200ms;
              transition-property: background, border, border-color;
              transition-timing-function: cubic-bezier(.4, 0, .23, 1);
              width: 20px;
            }
      >
        <i
          aria-hidden={true}
          className=
              ms-Checkbox-checkmark
              {
                -moz-osx-font-smoothing: grayscale;
                -webkit-font-smoothing: antialiased;
                color: #ffffff;
                display: inline-block;
                font-family: "FabricMDL2Icons";
                font-style: normal;
                font-weight: normal;
                opacity: 0;
                speak: none;
              }
              @media screen and (-ms-high-contrast: active){& {
                -ms-high-contrast-adjust: none;
                color: Window;
              }
          data-icon-name="CheckMark"
          role="presentation"
        >
          îœ¾
        </i>
      </div>
      <span
        className=
            ms-Checkbox-text
            {
              color: #333333;
              font-size: 14px;
              line-height: 20px;
              margin-bottom: 0;
              margin-left: 4px;
              margin-right: 4px;
              margin-top: 0;
            }
      >
        Render the box below in a Layer and target it at hostId=layerhost1
      </span>
    </label>
  </button>
  <div
    className=
        LayerExample-content
        {
          animation-duration: 0.367s;
          animation-fill-mode: both;
          animation-name: keyframes from{opacity:0;}to{opacity:1;} keyframes from{transform:scale3d(.98,.98,1);}to{transform:scale3d(1,1,1);};
          animation-timing-function: cubic-bezier(.1,.9,.2,1);
        }
  >
    This is example layer content.
  </div>
  <div
    className="LayerExample-nonLayered"
  >
    I am normally below the content.
  </div>
  <p>
    If you do not specify a hostId then the hosted layer will default to being fixed to the page by default.
  </p>
  <button
    aria-checked={false}
    checked={false}
    className=
        ms-Checkbox
        is-enabled
        {
          -moz-osx-font-smoothing: grayscale;
          -webkit-font-smoothing: antialiased;
          background: none;
          border: none;
          cursor: pointer;
          display: block;
          font-family: 'Segoe UI', 'Segoe UI Web (West European)', 'Segoe UI', -apple-system, BlinkMacSystemFont, 'Roboto', 'Helvetica Neue', sans-serif;
          font-size: 14px;
          font-weight: 400;
          margin-bottom: 0;
          margin-left: 0;
          margin-right: 0;
          margin-top: 0;
          outline: none;
          padding-bottom: 0;
          padding-left: 0;
          padding-right: 0;
          padding-top: 0;
          position: relative;
        }
        &::-moz-focus-inner {
          border: 0;
        }
        .ms-Fabric--isFocusVisible &:focus:after {
          border: 1px solid #ffffff;
          bottom: -2px;
          content: "";
          left: -2px;
          outline: 1px solid #666666;
          position: absolute;
          right: -2px;
          top: -2px;
          z-index: 1;
        }
        &:hover .ms-Checkbox-checkbox {
          border-color: #212121;
        }
        @media screen and (-ms-high-contrast: active){&:hover .ms-Checkbox-checkbox {
          border-color: Highlight;
        }
        &:focus .ms-Checkbox-checkbox {
          border-color: #212121;
        }
        &:hover .ms-Checkbox-checkmark {
          color: #a6a6a6;
          opacity: 1;
        }
        @media screen and (-ms-high-contrast: active){&:hover .ms-Checkbox-checkmark {
          color: Highlight;
        }
        &:hover .ms-Checkbox-text {
          color: #333333;
        }
        &:focus .ms-Checkbox-text {
          color: #333333;
        }
    id="checkbox-2"
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    role="checkbox"
    type="button"
  >
    <label
      className=
          ms-Checkbox-label
          {
            align-items: flex-start;
            cursor: pointer;
            display: flex;
            margin-bottom: 0;
            margin-left: -4px;
            margin-right: -4px;
            margin-top: 0;
            position: relative;
            text-align: left;
            user-select: none;
          }
      htmlFor="checkbox-2"
    >
      <div
        className=
            ms-Checkbox-checkbox
            {
              align-items: center;
              border-color: #666666;
              border-style: solid;
              border-width: 1px;
              box-sizing: border-box;
              display: flex;
              flex-shrink: 0;
              height: 20px;
              justify-content: center;
              margin-bottom: 0;
              margin-left: 4px;
              margin-right: 4px;
              margin-top: 0;
              overflow: hidden;
              transition-duration: 200ms;
              transition-property: background, border, border-color;
              transition-timing-function: cubic-bezier(.4, 0, .23, 1);
              width: 20px;
            }
      >
        <i
          aria-hidden={true}
          className=
              ms-Checkbox-checkmark
              {
                -moz-osx-font-smoothing: grayscale;
                -webkit-font-smoothing: antialiased;
                color: #ffffff;
                display: inline-block;
                font-family: "FabricMDL2Icons";
                font-style: normal;
                font-weight: normal;
                opacity: 0;
                speak: none;
              }
              @media screen and (-ms-high-contrast: active){& {
                -ms-high-contrast-adjust: none;
                color: Window;
              }
          data-icon-name="CheckMark"
          role="presentation"
        >
          îœ¾
        </i>
      </div>
      <span
        className=
            ms-Checkbox-text
            {
              color: #333333;
              font-size: 14px;
              line-height: 20px;
              margin-bottom: 0;
              margin-left: 4px;
              margin-right: 4px;
              margin-top: 0;
            }
      >
        Render the box below in a Layer without specifying a host, fixing it to the top of the page
      </span>
    </label>
  </button>
  <div
    className=
        LayerExample-content
        {
          animation-duration: 0.367s;
          animation-fill-mode: both;
          animation-name: keyframes from{opacity:0;}to{opacity:1;} keyframes from{transform:scale3d(.98,.98,1);}to{transform:scale3d(1,1,1);};
          animation-timing-function: cubic-bezier(.1,.9,.2,1);
        }
  >
    This is example layer content.
  </div>
</div>
`;
